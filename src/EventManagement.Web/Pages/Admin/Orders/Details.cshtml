@page "{id:int}"
@inject IOrderService orderService
@inject IProductsService productsService
@{
    var id = Convert.ToInt32(RouteData.Values["id"]);
    var order = await orderService.GetByIdAsync(id);
    var products = await productsService.GetForEventAsync(order.Registration.EventInfoId);
    var variants = products.SelectMany(p => p.ProductVariants)
                           .Select(x => new { id = x.ProductVariantId, pid = x.ProductId, name = x.Name });
}
<div class="container">
	<div class="row">
        <div class="col">
            <h2>
                Order #@order.OrderId 
                <small><order-status value="@order.Status" /></small>
            </h2>

            <h4>Participant</h4>
            <dl class="row">
                <dt class="col-6 col-md-3 col-lg-2 text-right">Participant Name</dt>
                <dd class="col-6 col-md-9 col-lg-10">@(order.User?.Name ?? "NIL")</dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Participant Email</dt>
                <dd class="col-6 col-md-9 col-lg-10">@(order.User?.Email ?? "NIL")</dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Participant Phone</dt>
                <dd class="col-6 col-md-9 col-lg-10">@(order.User?.PhoneNumber ?? "NIL")</dd>
            </dl>

            <h4>Customer</h4>
            <dl class="row">
                <dt class="col-6 col-md-3 col-lg-2 text-right">Customer Name</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.CustomerName</dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Customer Email</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.CustomerEmail</dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Customer Invoice Reference</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.CustomerInvoiceReference</dd>
            </dl>
            
            <h4>
                Order Lines 
                @if(order.CanEdit)
                {
                    <button class="btn btn-default" data-toggle="modal" data-target="#add-orderline-modal">Add Line</button>
                }
            </h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>Line#</th>
                        <th>Product ID</th>
                        <th>Product Name</th>
                        <th>Variant ID</th>
                        <th>Variant Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        @if(order.CanEdit)
                        {
                            <th></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach(var line in order.OrderLines)
                    {
                        <tr>
                            <td>@line.OrderLineId</td>
                            <td>@line.ProductId</td>
                            <td>@line.ProductName</td>
                            <td>@(line.ProductVariantId?.ToString() ?? "NA")</td>
                            <td>@(line.ProductVariantName ?? "NA")</td>
                            <td>@line.Quantity</td>
                            <td>@line.Price</td>
                            @if(order.CanEdit)
                            {
                                <td>
                                    <a tabindex="0" class="btn btn-sm btn-danger" role="button"       
                                        data-toggle="popover" 
                                        data-trigger="focus" 
                                        title="Delete line?" 
                                        data-content="<button class='btn btn-sm btn-danger btn-delete-line' onclick='deleteOrderLine(@line.OrderLineId)'>Yes</button><button class='btn btn-sm btn-success'>No</button>">
                                        <i class="material-icons md-light md-18">delete</i>
                                    </a>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>

            <h4>Order Information</h4>
            <dl class="row">
                <dt class="col-6 col-md-3 col-lg-2 text-right">Order ID</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.OrderId</dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">User ID</dt>
                <dd class="col-6 col-md-9 col-lg-10"><code>@(order.UserId ?? "Unavailable")</code></dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Registration ID</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.RegistrationId</dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Order Status</dt>
                <dd class="col-6 col-md-9 col-lg-10"><order-status value="@order.Status" /></dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Order Time</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.OrderTime</dd>
            </dl>

            <strong>Comments</strong><br />
            <pre>@order.Comments</pre>

            <strong>Log</strong><br />
            <pre>@order.Log</pre>
        </div>
    </div>
</div>


<!-- Add OrderLine Modal -->
<div class="modal fade" 
    id="add-orderline-modal" 
    tabindex="-1" 
    role="dialog" 
    data-keyboard="false"
    aria-labelledby="add-orderline-modal-title" 
    aria-hidden="true">
    <div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="add-orderline-modal-title">Add Order Line</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        </div>
        <div class="modal-body">
        <div class="form-group">
            <label class="control-label">Product</label>
            <select id="selected-product" class="form-control">
                <option selected disabled>Select Product</option>   
                @foreach(var p in products) 
                {
                    <option value="@p.ProductId">@p.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label class="control-label">Variant</label>
            <select id="selected-variant" class="form-control" disabled>
            </select>
        </div>
        </div>
        <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button id="btn-add-orderline" type="button" class="btn btn-primary">Add Line <i class="fa fa-spinner fa-pulse fa-fw" aria-hidden="true" style="display:none"></i></button>
        </div>
    </div>
    </div>
</div>

@* Div to disable inputs.
Gotta do it in a better way later. *@
<div id="input-disabler" style="position: fixed; top: 0; left: 0; bottom: 0; right: 0; color: transparent; z-index:2000; display: none"></div>

@section scripts { 
    <script>
        // helper function
        $.postJSON = function(url, data, callback) {
            return jQuery.ajax({
                headers: { 
                    'Content-Type': 'application/json' 
                },
                'type': 'POST',
                'url': url,
                'data': JSON.stringify(data)
            });
        };

        $(function () {
            const variants = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(variants));
            const $sVariants = $('#selected-variant');
            const $sProducts = $("#selected-product");

            $('[data-toggle="popover"]').popover({
                html: true
            })
            $sProducts.change(function() {
                // Remove existing options
                $sVariants.empty();

                const n = $(this).val();
                const currentVariants = variants.filter(function(v){ return v.pid == n });

                currentVariants.forEach(function(v){
                    $sVariants.append($('<option>', {
                        value: v.id,
                        text: v.name
                    }));
                });
                if(currentVariants.length > 0) {
                    // enable the input
                    $sVariants.prop('disabled', false);
                } else {
                    // Disable the input
                    $sVariants.prop('disabled', true);
                }
            });

            const $disabler = $('#input-disabler');
            const $spinner = $('.fa-spinner');
            $('#btn-add-orderline').bind('click', function() {

                if($sProducts.val() == null) return;

                $spinner.show();
                $disabler.show();
                const data = {
                    orderId: "@order.OrderId",
                    productId: $sProducts.val(),
                    variantId: $sVariants.val()
                };

                $.postJSON('/api/v0/orders/line/add', data).done(function(x) {
                    location.reload();
                }).fail(function(){
                    $spinner.hide();
                    $disabler.hide();
                })

            })
        })

        function deleteOrderLine(lineid) {
            $.post('/api/v0/orders/line/delete/'+lineid, function() {
                location.reload();
            })
        }
    </script>
}